def get_kubernetes_student_cloud() {
    def cloudName
    withFolderProperties {
        cloudName = env.CLOUD_ENV
    }
    return cloudName
}

environment {
    DOCKER_AUTH = credentials('1cc4b160-01af-46e1-85f5-3af6a808913f');
}

pipeline {
    agent {
        kubernetes {
            cloud get_kubernetes_student_cloud()
            yamlFile 'agent/jenkins-kaniko-agent.yaml'
        }
    }
    stages {
        stage('Build Application') {
            steps {
                container(name: 'maven'){
                    sh 'mvn clean package'
                }
            }
        }
        stage('Code quality') {
            steps {
                withSonarQubeEnv(installationName: 'sonarQube-devops', credentialsId: 'sonarqube') {
                    container('maven') {
                        sh 'mvn sonar:sonar -Dsonar.branch.name=$BRANCH_NAME'
                    }
                }
            }
        }
        stage('Build Image') {
            environment {
                DOCKER_AUTH = credentials('Docker-devops31')
                GIT_AUTH = credentials('deploy-token31')
            }
            steps {
                sh 'echo "Building the docker image"'
                container (name: 'kaniko') {
                    sh 'mkdir -p /kaniko/.docker'
                    sh '''
                        set +x
                        echo "{\\"auths\\":{\\"https://index.docker.io/v1/\\":{\\"auth\\":\\"$(echo -n $DOCKER_AUTH_USR:$DOCKER_AUTH_PSW | base64)\\"},\\"registry.devops-labs.it/students/devops31/todo\\":{\\"auth\\":\\"$(echo -n $GIT_AUTH_USR:$GIT_AUTH_PSW | base64)\\"}}}" > /kaniko/.docker/config.json
                        set -x
                    '''
                    sh 'cat /kaniko/.docker/config.json'
                    sh '/kaniko/executor --dockerfile Dockerfile --context `pwd` --no-push'
                }
            }
        }
    }
}